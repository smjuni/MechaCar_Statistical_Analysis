mpg_summary<-mpg %>% group_by(class, year) %>% summarize(Mean_Hwy = mean(hwy), .groups="keep")
library(tidyverse)
mpg_summary<-mpg %>% group_by(class, year) %>% summarize(Mean_Hwy = mean(hwy), .groups="keep")
mpg_summary<-mpg %>% group_by(class, year) %>% summarize(Mean_Hwy = mean(hwy), .groups="keep")
plt<-ggplot(mpg_summary, aes(x=class, y=factor(year),fill=Mean_Hwy))
plt+geom_tile()+labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)")
mpg_summary<- mpg %>% group_by(model, year) %>% summarise(Mean_Hwy=mean(hwy), .groups="keep")
plt<- ggplot(mpg_summary, aes(x=model, y=factor(year) fill=Mean_Hwy))
plt<- ggplot(mpg_summary, aes(x=model, y=factor(year) fill=Mean_Hwy))
plt<- ggplot(mpg_summary, aes(x=model, y=factor(year), fill=Mean_Hwy))
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)")
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)") +
theme(axis.text.x = element_text(angle = 90, hjust=1))
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)") +
theme(axis.text.x = element_text(angle = 90, hjust=0))
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)") +
theme(axis.text.x = element_text(angle = 90, hjust=1))
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)") +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1))
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)") +
theme(axis.text.x = element_text(angle = 90, vjust=1, hjust=1))
plt +geom_tile() + labs(x="Model", y="Vehicle Year", fill="Mean Highway(MPG)") +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()
theme(axis.text.x=element_text(angle=45,hjust=1))
plt + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1))
plt + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), SD_Engine=sd(displ),.groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") +
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine, ymax=Mean_Engine+SD_Engine))#add scatter plot
mpg_long<-mpg%>% gather(key="MPG_Type", value="Rating", c(cty, hwy))
View(mpg_long)
View(mpg_long)
head(mpg_long)
plt<-ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt+geom_boxplot()+theme(axis.line.x=element_text(angle=45, hjust=1))
plt<-ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt+geom_boxplot()+theme(axis.line.x=element_text(angle=45, hjust=1))
plt+geom_boxplot()+theme(axis.text.x=element_text(angle=45, hjust=1))
?facet_wrap
plt<-ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt+geom_boxplot()+facet_wrap(vars(MPG_Type))+
theme(axis.text.x = element_text(angle=45, hjust=1), legend.position = "none")+
xlab("Manufacturer")
# Import the tidyverse library
library(tidyverse)
# The read_csv() function imports our dataset as a data table
zillow_oc_2017 <- read_csv(file="02-Evr_Read_CSV/Resources/zillow_orange_county_2017.csv")
# Import the tidyverse library
library(tidyverse)
# The read_csv() function imports our dataset as a data table
zillow_oc_2017 <- read_csv(file="02-Evr_Read_CSV/Resources/zillow_orange_county_2017.csv")
# Import the tidyverse library
library(tidyverse)
# The read_csv() function imports our dataset as a data table
zillow_oc_2017 <- read_csv(file="02-Evr_Read_CSV/Resources/zillow_orange_county_2017.csv")
# Import the tidyverse library
library(tidyverse)
# The read_csv() function imports our dataset as a data table
zillow_oc_2017 <- read_csv(file="/Users/Stephanie/Bootcamp/utor-virt-data-pt-10-2020-u-b/2021-02-09-Files/02-Evr_Read_CSV/Resources/zillow_orange_county_2017.csv")
# Use bracket `[]` notation to select specific rows and columns by number, range, name, or vector
# Row Index Number, Column Index Number
zillow_oc_2017[1,1]
# Row Index Number, Column Name
zillow_oc_2017[1,'parcelid']
# Row Index Number Range, Column Index Number Range
zillow_oc_2017[1:2,1:14]
# Row Index Number Vector, Column Name Vector
zillow_oc_2017[c(1, 10, 42),c('finishedsquarefeet', 'yearbuilt', 'homevalue')]
# Filter data by row
zillow_oc_sqft_gt_2000 <- zillow_oc_2017[deframe(zillow_oc_2017['finishedsquarefeet']) > 2000,]
# Check filtered data
zillow_oc_sqft_gt_2000
ggplot(mtcars,aes(x=wt)) + geom_density()
?shapiro.test
shapiro.test(mtcars$wt)
?sample_n()
library(tidyverse)
#import used car data set
population_table<-read.csv("used_car_data.csv", check.names = F, stringsAsFactors = F)
#import used car data set
population_table<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Statistical_Analysis/used_car_data.csv", check.names = F, stringsAsFactors = F)
head(population_table)
plt<-ggplot(population_table, aes(x=log10(Miles_Driven)))
plt +geom_density()
sample_table<-population_table%>%sample_n(50)
sample_table
plt<-ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt+geom_density()
sample_table<-population_table%>%sample_n(50)
plt<-ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt+geom_density()
?t.test
#compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
library(tidyverse)
#import used car data set
population_table<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Statistical_Analysis/used_car_data.csv", check.names = F, stringsAsFactors = F)
head(population_table)
plt<-ggplot(population_table, aes(x=log10(Miles_Driven)))
plt +geom_density()
sample_table<-population_table%>%sample_n(50)
sample_table
plt<-ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt+geom_density()
?t.test
#compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
sample_table<-population_table%>%sample_n(50)
sample_table2<-population_table%>% sample_n(50)
t.test(log10(sample_table$Miles_Driven), log10(sample_table2$Miles_Driven))
?t.test
#import dataset
mpg_data<-read.csv("mpg_modified.csv")
#import dataset
mpg_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Statistical_Analysis/mpg_modified.csv")
mpg_1999<-mpg_data%>% filter(year==1999)
mpg_2008<-mpg_data%>% filter(year==2008)
t.test(mpg_1999$hwy, mpg_2008$hwy, paired = T)
?aov()
mtcars_filt<-mtcars[,c("hp", "cyl")]
View(mtcars_filt)
View(mtcars_filt)
mtcars_filt$cyl<factor(mtcars_filt$cyl)
mtcars_filt$cyl<-factor(mtcars_filt$cyl)
#compare means across multiple levels
aov(hp~cyl, data=mtcars_filt)
#compare means across multiple levels
summary(aov(hp~cyl, data=mtcars_filt))
?cor()
head(mtcars)
plt<-ggplot(mtcars, aes(x=hp, y=qsec))
plt+geom_point()
library(ggplot)
library(ggplot2)
plt<-ggplot(mtcars, aes(x=hp, y=qsec))
plt+geom_point()
cor(mtcars$hp mtcars$qsec)
cor(mtcars$hp, mtcars$qsec)
used_cars<-read.csv("used_car_data.csv", stringsAsFactors = F, )
used_cars<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Statistical_Analysis/used_car_data.csv", stringsAsFactors = F, )
head(used)
head(used_cars)
plt<-ggplot(used_cars, aes(x=Miles_Driven, y=Selling_Price))
plt+geom_point()
cor(used_cars$Miles_Driven, used_cars$Selling_Price)
used_matrix<-as.matrix(used_cars[,c("Selling_Price", "Present_Price", "Miles_Driven")])
used_matrix
cor(used_matrix)
?lm()
l(qsec~hp, mtcars)
lm(qsec~hp, mtcars)
summary(lm(qsec~hp, mtcars))
model<-lm(qsec~hp,mtcars)
yvals<-model$coefficients["hp"]*mtcars$hp +
model$coefficients["(Intercept"]
plt<-ggplot(mtcars, aes(x=hp, y=qsec))
plt+geom_point +geom_line(aes(y=yvals), color="red")
plt<-ggplot(mtcars, aes(x=hp, y=qsec))
plt+geom_point +geom_line(aes(y=yvals), color="red")
plt+geom_point() +geom_line(aes(y=yvals), color="red")
plt+geom_point() + geom_line(aes(y=yvals), color="red")
plt<-ggplot(mtcars, aes(x=hp, y=qsec))
plt+geom_point() + geom_line(aes(y=yvals), color="red")
yvals<-model$coefficients["hp"]*mtcars$hp +
model$coefficients["(Intercept)"]
plt<-ggplot(mtcars, aes(x=hp, y=qsec))
plt+geom_point() + geom_line(aes(y=yvals), color="red")
lm(qsec~mpg+disp+drat+wt+hp, data = mtcars)
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
#generate contingency table
table(mpg$class, mpg$year)
#generate contingency table
tbl<-table(mpg$class, mpg$year)
chisq.test(tbl)
setwd("~/Bootcamp/Module15- R_analysis/MechaCar_Statistical_Analysis")
library(dplyr)
mecha_data=read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/MechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
library(dplyr)
mecha_data=read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/MechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
head(mecha_data)
#Linear regression
?lm()
lm(mpg~vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD)
lm(mpg~(vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD) mecha_data)
lm(mpg~(vehicle_length + vehicle_weight+ spoiler_angle+ ground_clearance+ AWD, data=mecha_data)
lm(mpg~vehicle_length + vehicle_weight+ spoiler_angle+ ground_clearance+ AWD, data=mecha_data)
linear_mechaData=lm(mpg~vehicle_length + vehicle_weight+ spoiler_angle+ ground_clearance+ AWD, data=mecha_data)
summary(lm(linear_mechaData))
?read.csv
susp_data=read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv", check.names = F, stringsAsFactors = F)
View(susp_data)
View(susp_data)
susp_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv", check.names = F, stringsAsFactors = F)
mecha_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/MechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
View(susp_data)
View(susp_data)
View(susp_data)
View(susp_data)
total_summary<-susp_data %>% group_by("PSI") %>% summarize(PSI, .groups = "keep")
total_summary
total_summary<-susp_data %>% group_by("PSI") %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), Standard_Deviation= sd(PSI), .groups = "keep")
total_summary
View(total_summary)
View(total_summary)
susp_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv", check.names = F, stringsAsFactors = F)
total_summary<-susp_data %>% group_by("PSI") %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), Standard_Deviation= sd(PSI), .groups = "keep")
total_summary
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), Standard_Deviation= sd(PSI), .groups = "keep")
total_summary
susp_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv")
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), Standard_Deviation= sd(PSI), .groups = "keep")
total_summary
susp_data<-read.table("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv")
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), Standard_Deviation= sd(PSI), .groups = "keep")
total_summary
susp_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv")
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), Standard_Deviation= sd(PSI), .groups = "keep")
total_summary
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_summary
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = vars(PSI), SD= sd(PSI), .groups = "keep")
total_summary
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD= sd(PSI), .groups = "keep")
total_summary
?var()
?summarize()
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD= sd(PSI))
total_summary
View(susp_data)
View(susp_data)
susp_data<-read.csv("/Users/Stephanie/Bootcamp/Module15- R_analysis/Challenge/Suspension_Coil.csv", check.names = F, stringsAsFactors = F)
total_summary<-susp_data  %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD= sd(PSI))
total_summary
?read.csv
total_summary<-susp_data  %>% group_by(PSI) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD= sd(PSI))
View(total_summary)
View(total_summary)
total_summary<-susp_data %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD= sd(PSI))
total_summary
head(susp_data)
